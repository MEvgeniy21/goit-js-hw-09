{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBA4BjC,SAASI,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEL,E,MAAUJ,IAEpBU,EAAO,C,SAAEN,E,MAAUJ,MAEpBA,MAlCPJ,EAAKC,KAAKe,iBAAiB,UAE3B,SAAuBC,GACrB,MAAMC,EAAaC,SAASnB,EAAKI,MAAMgB,MAAO,IACxCC,EAAYF,SAASnB,EAAKK,KAAKe,MAAO,IACtCE,EAAcH,SAASnB,EAAKM,OAAOc,MAAO,IAChD,IAAIG,EAAY,KAEhBN,EAAMO,iBAEN,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAaG,GAAK,EACrCF,EAAkB,IAANE,EAAUP,EAAaK,EAAYF,EAE/Cd,EAAckB,EAAGF,GACdG,MAAK,EAAClB,SAAEA,EAAQJ,MAAEA,MACjBN,EAAA6B,OAAOC,QAAQ,qBAAqBpB,QAAeJ,UAGpDyB,OAAM,EAACrB,SAAEA,EAAQJ,MAAEA,MAClBN,EAAA6B,OAAOG,QAAQ,oBAAoBtB,QAAeJ","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onClickSubmit);\n\nfunction onClickSubmit(event) {\n  const inputDelay = parseInt(refs.delay.value, 10);\n  const inputStep = parseInt(refs.step.value, 10);\n  const inputAmount = parseInt(refs.amount.value, 10);\n  let stepDelay = null;\n\n  event.preventDefault();\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n    stepDelay = i === 1 ? inputDelay : stepDelay + inputStep;\n\n    createPromise(i, stepDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","inputDelay","parseInt","value","inputStep","inputAmount","stepDelay","preventDefault","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.c6e86af9.js.map"}